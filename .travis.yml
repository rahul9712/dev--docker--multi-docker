
language: generic

sudo: required
services:
  - docker

before_install:
  - docker build -t rahul9712/dev-docker-react-test -f ./client/Dockerfile.dev ./client

script:
  - docker run -e CI=true rahul9712/dev-docker-react-test npm run test
#   - docker run rahul9712/dev-docker-react-test npm run test -- --coverage

after_success:
  - docker build -t rahul9712/dev-docker-multi-client ./client
  - docker build -t rahul9712/dev-docker-multi-nginx ./nginx
  - docker build -t rahul9712/dev-docker-multi-server ./server
  - docker build -t rahul9712/dev-docker-multi-worker ./worker
  # Login into the docker CLI
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin

  # Take these images to Docker hub
  - docker push rahul9712/dev-docker-multi-client
  - docker push rahul9712/dev-docker-multi-nginx
  - docker push rahul9712/dev-docker-multi-server
  - docker push rahul9712/dev-docker-multi-worker


# TODO: implement deploy:
deploy:
  provider: elasticbeanstalk
  region: "us-east-2"         # multidocker-env.pqfuscttyj.us-east-2.elasticbeanstalk.com/
  app: "multi-docker"         # https://us-east-2.console.aws.amazon.com/elasticbeanstalk/home?region=us-east-2#/environment/dashboard?applicationName=multi-docker&environmentId=e-ampaxkpsy3
  env: "MultiDocker-env"
  bucket_name: "elasticbeanstalk-us-east-2-025262009214"
  bucket_path: "multi-docker"     # Same as app name
  on:
    branch: master
  access_key_id:
    secure: "$AWS_ACCESS_KEY"
  secret_access_key:
    secure: "$AWS_SECRET_KEY"
